/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ApprovedTermExtension = {
    capitalize: boolean;
    fixCase: boolean;
    fixCommonMistakes: boolean;
    id?: number | undefined;
    termId: number;
};

/** @internal */
export namespace ApprovedTermExtension$ {
    export type Inbound = {
        capitalize: boolean;
        fixCase: boolean;
        fixCommonMistakes: boolean;
        id?: number | undefined;
        termId: number;
    };

    export const inboundSchema: z.ZodType<ApprovedTermExtension, z.ZodTypeDef, Inbound> = z
        .object({
            capitalize: z.boolean(),
            fixCase: z.boolean(),
            fixCommonMistakes: z.boolean(),
            id: z.number().int().optional(),
            termId: z.number().int(),
        })
        .transform((v) => {
            return {
                capitalize: v.capitalize,
                fixCase: v.fixCase,
                fixCommonMistakes: v.fixCommonMistakes,
                ...(v.id === undefined ? null : { id: v.id }),
                termId: v.termId,
            };
        });

    export type Outbound = {
        capitalize: boolean;
        fixCase: boolean;
        fixCommonMistakes: boolean;
        id?: number | undefined;
        termId: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ApprovedTermExtension> = z
        .object({
            capitalize: z.boolean(),
            fixCase: z.boolean(),
            fixCommonMistakes: z.boolean(),
            id: z.number().int().optional(),
            termId: z.number().int(),
        })
        .transform((v) => {
            return {
                capitalize: v.capitalize,
                fixCase: v.fixCase,
                fixCommonMistakes: v.fixCommonMistakes,
                ...(v.id === undefined ? null : { id: v.id }),
                termId: v.termId,
            };
        });
}
