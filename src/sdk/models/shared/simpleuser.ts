/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SimpleUser = {
    email?: string | undefined;
    firstName: string;
    id: number;
    lastName?: string | undefined;
};

/** @internal */
export namespace SimpleUser$ {
    export type Inbound = {
        email?: string | undefined;
        firstName: string;
        id: number;
        lastName?: string | undefined;
    };

    export const inboundSchema: z.ZodType<SimpleUser, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.string().optional(),
            firstName: z.string(),
            id: z.number().int(),
            lastName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                firstName: v.firstName,
                id: v.id,
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
            };
        });

    export type Outbound = {
        email?: string | undefined;
        firstName: string;
        id: number;
        lastName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SimpleUser> = z
        .object({
            email: z.string().optional(),
            firstName: z.string(),
            id: z.number().int(),
            lastName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                firstName: v.firstName,
                id: v.id,
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
            };
        });
}
