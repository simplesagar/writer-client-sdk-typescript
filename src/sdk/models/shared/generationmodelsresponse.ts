/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    GenerationModelInfoResponse,
    GenerationModelInfoResponse$,
} from "./generationmodelinforesponse";
import * as z from "zod";

export type GenerationModelsResponse = {
    data?: Array<GenerationModelInfoResponse> | undefined;
};

/** @internal */
export namespace GenerationModelsResponse$ {
    export type Inbound = {
        data?: Array<GenerationModelInfoResponse$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GenerationModelsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            data: z.array(GenerationModelInfoResponse$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });

    export type Outbound = {
        data?: Array<GenerationModelInfoResponse$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GenerationModelsResponse> = z
        .object({
            data: z.array(GenerationModelInfoResponse$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });
}
