/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ModelFile, ModelFile$ } from "./modelfile";
import { z } from "zod";

export type ModelFilesResponse = {
    files?: Array<ModelFile> | undefined;
};

/** @internal */
export namespace ModelFilesResponse$ {
    export type Inbound = {
        files?: Array<ModelFile$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<ModelFilesResponse, z.ZodTypeDef, Inbound> = z
        .object({
            files: z.array(ModelFile$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.files === undefined ? null : { files: v.files }),
            };
        });

    export type Outbound = {
        files?: Array<ModelFile$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ModelFilesResponse> = z
        .object({
            files: z.array(ModelFile$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.files === undefined ? null : { files: v.files }),
            };
        });
}
