/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKHooks } from "../hooks";
import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { AIContentDetector } from "./aicontentdetector";
import { Billing } from "./billing";
import { Completions } from "./completions";
import { Content } from "./content";
import { CoWrite } from "./cowrite";
import { Document } from "./document";
import { DownloadTheCustomizedModel } from "./downloadthecustomizedmodel";
import { Files } from "./files";
import { ModelCustomization } from "./modelcustomization";
import { Models } from "./models";
import { Snippet } from "./snippet";
import { Styleguide } from "./styleguide";
import { Terminology } from "./terminology";
import { User } from "./user";

export class Writer extends ClientSDK {
    private readonly options$: SDKOptions & { hooks?: SDKHooks };

    constructor(options: SDKOptions = {}) {
        const opt = options as unknown;
        let hooks: SDKHooks;
        if (
            typeof opt === "object" &&
            opt != null &&
            "hooks" in opt &&
            opt.hooks instanceof SDKHooks
        ) {
            hooks = opt.hooks;
        } else {
            hooks = new SDKHooks();
        }

        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
            hooks,
        });

        this.options$ = { ...options, hooks };
        void this.options$;
    }

    private _billing?: Billing;
    get billing() {
        return (this._billing ??= new Billing(this.options$));
    }

    private _aiContentDetector?: AIContentDetector;
    get aiContentDetector() {
        return (this._aiContentDetector ??= new AIContentDetector(this.options$));
    }

    private _content?: Content;
    get content() {
        return (this._content ??= new Content(this.options$));
    }

    private _coWrite?: CoWrite;
    get coWrite() {
        return (this._coWrite ??= new CoWrite(this.options$));
    }

    private _files?: Files;
    get files() {
        return (this._files ??= new Files(this.options$));
    }

    private _models?: Models;
    get models() {
        return (this._models ??= new Models(this.options$));
    }

    private _completions?: Completions;
    get completions() {
        return (this._completions ??= new Completions(this.options$));
    }

    private _modelCustomization?: ModelCustomization;
    get modelCustomization() {
        return (this._modelCustomization ??= new ModelCustomization(this.options$));
    }

    private _downloadTheCustomizedModel?: DownloadTheCustomizedModel;
    get downloadTheCustomizedModel() {
        return (this._downloadTheCustomizedModel ??= new DownloadTheCustomizedModel(this.options$));
    }

    private _document?: Document;
    get document() {
        return (this._document ??= new Document(this.options$));
    }

    private _snippet?: Snippet;
    get snippet() {
        return (this._snippet ??= new Snippet(this.options$));
    }

    private _styleguide?: Styleguide;
    get styleguide() {
        return (this._styleguide ??= new Styleguide(this.options$));
    }

    private _terminology?: Terminology;
    get terminology() {
        return (this._terminology ??= new Terminology(this.options$));
    }

    private _user?: User;
    get user() {
        return (this._user ??= new User(this.options$));
    }
}
